{"version":3,"file":"static/js/898.914c0b04.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","hooks/useContacts.js","utils/phoneNumberSheme.js","components/ContactsForm/ContactsForm.jsx","components/ContactModal/ContactModal.jsx","utils/removeDelimiters.js","components/UpdateContact/UpdateContact.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/UserContacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\n//\nexport const selectFilter = state => state.filter;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectFilter,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport * as operations from 'redux/contacts/operations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const isContactsLoading = useSelector(selectIsLoading);\n  const isContactsFiltered = useSelector(selectFilter);\n  const isAllContacts = useSelector(selectContacts);\n\n  const fetchContacts = useCallback(async () => {\n    await dispatch(operations.fetchContacts()).unwrap();\n  }, [dispatch]);\n\n  const addContact = async newContact => {\n    await dispatch(operations.addContact(newContact)).unwrap();\n  };\n\n  const deleteContact = async id => {\n    await dispatch(operations.deleteContact(id)).unwrap();\n  };\n\n  const updateContact = async data => {\n    await dispatch(operations.updateContact(data)).unwrap();\n  };\n\n  return {\n    isContactsLoading,\n    isContactsFiltered,\n    isAllContacts,\n    fetchContacts,\n    addContact,\n    deleteContact,\n    updateContact,\n  };\n};\n","export const phoneNumberScheme = number => {\n  const cleaned = ('' + number).replace(/\\D/g, '');\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{2})(\\d{2})$/);\n\n  if (match) {\n    return '(' + match[1] + ')-' + match[2] + '-' + match[3] + '-' + match[4];\n  }\n\n  return null;\n};\n","import { useContacts } from 'hooks/useContacts';\nimport toast from 'react-hot-toast';\nimport {\n  Input,\n  Stack,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Button,\n  FormLabel,\n  InputLeftAddon,\n} from '@chakra-ui/react';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { phoneNumberScheme } from 'utils/phoneNumberSheme';\n\nexport const ContactsForm = ({ onSubmit }) => {\n  const { isAllContacts, addContact } = useContacts();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n\n    const isNameAlreadyExist = isAllContacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase()\n    );\n\n    if (isNameAlreadyExist) {\n      toast.error(`${name} is already exist.`, {\n        position: 'top-center',\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      number: phoneNumberScheme(number),\n    };\n\n    try {\n      await addContact(newContact);\n      form.reset();\n      onSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={2}>\n          <FormLabel htmlFor=\"name\" m=\"0\">\n            Name:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <Icon as={BsFillPersonFill} color=\"gray.300\" />\n            </InputLeftElement>\n\n            <Input\n              as=\"input\"\n              name=\"name\"\n              placeholder=\"Name\"\n              minLength={3}\n              id=\"name\"\n            />\n          </InputGroup>\n          <FormLabel htmlFor=\"number\" m=\"0\">\n            Phone:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftAddon>+38</InputLeftAddon>\n            <Input\n              as=\"input\"\n              name=\"number\"\n              placeholder=\"(XXX)-XX-XX-XXX\"\n              minLength={10}\n              maxLength={10}\n              id=\"number\"\n            />\n          </InputGroup>\n          <Button type=\"submit\" variant=\"brand\" mt={4}>\n            Add contact\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Container,\n  Box,\n} from '@chakra-ui/react';\n\nexport const ContactModal = ({\n  buttonName,\n  modalTitle,\n  modalBody,\n  isOpen,\n  onOpen,\n  onClose,\n}) => {\n  const Overlay = () => (\n    <ModalOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n  );\n\n  const [overlay, setOverlay] = React.useState(<Overlay />);\n\n  return (\n    <Container>\n      <Box py={4}>\n        <Button\n          onClick={() => {\n            setOverlay(<Overlay />);\n            onOpen();\n          }}\n          variant=\"brand\"\n        >\n          {buttonName}\n        </Button>\n      </Box>\n\n      <Modal isCentered isOpen={isOpen} onClose={onClose}>\n        {overlay}\n        <ModalContent px={4} py={8}>\n          <ModalCloseButton />\n          <ModalHeader as=\"h2\" fontSize=\"xl\" align=\"center\">\n            {modalTitle}\n          </ModalHeader>\n          <ModalBody>{modalBody}</ModalBody>\n        </ModalContent>\n      </Modal>\n    </Container>\n  );\n};\n","export const removeDelimiters = number => {\n  const cleanedNumber = number.replace(/[()-]/g, '');\n\n  return cleanedNumber;\n};\n","import { useContacts } from 'hooks/useContacts';\nimport { phoneNumberScheme } from 'utils/phoneNumberSheme';\nimport { removeDelimiters } from 'utils/removeDelimiters';\n\nimport {\n  Input,\n  Stack,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Button,\n  FormLabel,\n  InputLeftAddon,\n} from '@chakra-ui/react';\nimport { BsFillPersonFill } from 'react-icons/bs';\n\nexport const UpdateContact = ({ id, name, number, onSubmit }) => {\n  const { updateContact } = useContacts();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n\n    const updatedContact = {\n      id,\n      name,\n      number: phoneNumberScheme(number),\n    };\n\n    try {\n      await updateContact(updatedContact);\n      form.reset();\n      onSubmit();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={2}>\n          <FormLabel htmlFor=\"name\" m=\"0\">\n            Name:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <Icon as={BsFillPersonFill} color=\"gray.300\" />\n            </InputLeftElement>\n\n            <Input\n              as=\"input\"\n              name=\"name\"\n              defaultValue={name}\n              minLength={3}\n              id=\"name\"\n            />\n          </InputGroup>\n          <FormLabel htmlFor=\"number\" m=\"0\">\n            Phone:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftAddon>+38</InputLeftAddon>\n            <Input\n              as=\"input\"\n              name=\"number\"\n              minLength={10}\n              maxLength={10}\n              id=\"number\"\n              defaultValue={removeDelimiters(number)}\n            />\n          </InputGroup>\n          <Button type=\"submit\" variant=\"brand\" mt={4}>\n            Update contact\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n};\n","import { useContacts } from 'hooks/useContacts';\nimport {\n  Flex,\n  Avatar,\n  Box,\n  Text,\n  Button,\n  Divider,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { ContactModal } from 'components/ContactModal/ContactModal';\nimport { UpdateContact } from 'components/UpdateContact/UpdateContact';\n\nexport const Contact = ({ id, name, number }) => {\n  const { deleteContact } = useContacts();\n  const update = useDisclosure();\n\n  return (\n    <>\n      <Flex align=\"center\" p={2}>\n        <Avatar src=\"https://bit.ly/broken-link\" />\n        <Box ml=\"3\">\n          <Text fontWeight=\"bold\">{name}</Text>\n          <Text fontSize=\"sm\">{number}</Text>\n        </Box>\n        <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\n          <ContactModal\n            {...update}\n            buttonName={'Update'}\n            modalTitle={'Update you contact'}\n            modalBody={\n              <UpdateContact\n                id={id}\n                name={name}\n                number={number}\n                onSubmit={update.onClose}\n              />\n            }\n          />\n          <Button\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n            variant=\"brand\"\n          >\n            <DeleteIcon />\n          </Button>\n        </Box>\n      </Flex>\n      <Divider />\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { useContacts } from 'hooks/useContacts';\nimport { Contact } from '../Contact/Contact';\nimport { Container, List, ListItem, Text } from '@chakra-ui/react';\n\nconst sortedItems = array => {\n  return array.slice().sort((a, b) => {\n    const fa = a.name.toLowerCase();\n    const fb = b.name.toLowerCase();\n    return fa.localeCompare(fb);\n  });\n};\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilter);\n  const { isAllContacts } = useContacts();\n\n  const filteredContacts = () => {\n    if (!isAllContacts) return [];\n    const filteredItems = isAllContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredItems;\n  };\n\n  const filteredContactsData = filteredContacts();\n  const sortedContactsData = sortedItems(filteredContactsData);\n\n  if (sortedContactsData.length === 0) {\n    return (\n      <Container>\n        <Text>\n          Sorry, but you don't have any contacts yet. You need to add your\n          contacts.\n        </Text>\n      </Container>\n    );\n  }\n\n  return (\n    <Container mb={20}>\n      <List spacing={4}>\n        {sortedContactsData.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <Contact name={name} number={number} id={id} />\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Input, Container } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilterInput = event => {\n    dispatch(setFilter(event.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Container py={4} px={4}>\n      <Input\n        as=\"input\"\n        onInput={onChangeFilterInput}\n        name=\"filter\"\n        placeholder=\"Search contact by name...\"\n        minLength={3}\n        id=\"filter\"\n      />\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactModal } from 'components/ContactModal/ContactModal';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDisclosure, Spinner, Heading, Flex } from '@chakra-ui/react';\n\nimport { useContacts } from 'hooks/useContacts';\n\nexport default function UserContacts() {\n  const { isContactsLoading, fetchContacts } = useContacts();\n  const register = useDisclosure();\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <>\n      <Heading as=\"h1\" fontSize=\"xl\" align=\"center\" py=\"8\">\n        Your phonebook\n      </Heading>\n\n      <div>\n        {isContactsLoading && (\n          <Flex align=\"center\" justify=\"center\">\n            <Spinner\n              thickness=\"4px\"\n              speed=\"0.65s\"\n              emptyColor=\"gray.200\"\n              color=\"blue.500\"\n              size=\"xl\"\n            />\n          </Flex>\n        )}\n      </div>\n      <Filter />\n      <ContactModal\n        {...register}\n        buttonName={'Add new contact'}\n        modalTitle={'Add new contact'}\n        modalBody={<ContactsForm onSubmit={register.onClose} />}\n      />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","useContacts","dispatch","useDispatch","isContactsLoading","useSelector","isContactsFiltered","isAllContacts","fetchContacts","useCallback","operations","unwrap","addContact","newContact","deleteContact","id","updateContact","data","phoneNumberScheme","number","match","replace","ContactsForm","onSubmit","handleSubmit","event","preventDefault","form","currentTarget","name","elements","value","trim","some","contact","toLowerCase","toast","position","reset","console","log","spacing","htmlFor","m","pointerEvents","as","BsFillPersonFill","color","I","placeholder","minLength","maxLength","type","variant","mt","ContactModal","buttonName","modalTitle","modalBody","isOpen","onOpen","onClose","Overlay","bg","backdropFilter","React","overlay","setOverlay","py","onClick","isCentered","px","fontSize","align","removeDelimiters","UpdateContact","updatedContact","defaultValue","Contact","update","useDisclosure","p","src","ml","fontWeight","display","alignItems","ContactsList","filteredContactsData","includes","sortedContactsData","slice","sort","a","b","fa","fb","localeCompare","length","mb","map","Filter","onInput","setFilter","target","UserContacts","register","useEffect","justify","thickness","speed","emptyColor","size"],"sourceRoot":""}